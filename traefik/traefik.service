[Unit]
Description=Traefik edge proxy
After=network-online.target
Wants=network-online.target systemd-networkd-wait-online.service

[Service]
; Restart if things go bang
Restart=on-abnormal

; User and group the process will run as.
User=traefik
Group=traefik

; Binary location, config is picked up implicitly. Can use configFile option to specify file
ExecStart=/usr/local/bin/traefik

; Limit the number of file descriptors, see `man systemd.exec` for more limit settings.
LimitNOFILE=1048576

; Use private /tmp and /var/tmp, which are discarded after traefik stops.
PrivateTmp=true

; Use a minimal /dev (May bring additional security if switched to 'true', but it may not work on Raspberry Pi's or other devices)
PrivateDevices=false

; Hide /home, /root, and /run/user. Nobody will steal my SSH-keys!
ProtectHome=true

; Make /usr, /boot, /etc and possibly some more folders read-only.
ProtectSystem=full

; â€¦ except /etc/traefik/acme, because we want Letsencrypt-certificates there.
;   This merely retains r/w access rights, it does not add anything new. Must still be writable on the host!
ReadWritePaths=/etc/traefik/acme

; The following additional security directives only work with systemd v229 or later.
; Note that you may have to add capabilities required by any plugins in use.
CapabilityBoundingSet=CAP_NET_BIND_SERVICE
AmbientCapabilities=CAP_NET_BIND_SERVICE

; Don't let traefik try and gain any new privileges (doesn't let it or its children escalate.)
NoNewPrivileges=true

; Set the unit to read env vars in. Needed to get the Let's Encrypt acme stuff to work with Cloudflare over their API
EnvironmentFile=-/etc/traefik/env

[Install]
WantedBy=multi-user.target